{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","name","email","className","href","TodoInfo","title","completed","user","classNames","id","username","TodoList","todos","map","todo","userId","App","useState","titleInput","setTitleInput","userSelect","setUserSelect","titleFull","setTitleFull","userChosen","setUserChosen","Math","max","todosFromServer","todoId","setTodoId","toDosUser","usersFromServer","find","userFromId","AddedTodos","action","method","onSubmit","event","preventDefault","push","Number","type","placeholder","value","onChange","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d14d5093.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\nexport const UserInfo: React.FC<User> = ({\n  name,\n  email,\n}) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoInfo: React.FC<Todo> = ({\n  title,\n  completed,\n  user,\n}) => {\n  return (\n    <article\n      data-id=\"1\"\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {\n        user && (\n          <UserInfo\n            name={user.name}\n            email={user.email}\n            id={user.id}\n            username={user.username}\n          />\n        )\n      }\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Todos = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Todos> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => (\n          <TodoInfo\n            key={todo.id}\n            title={todo.title}\n            user={todo.user}\n            completed={todo.completed}\n            id={todo.id}\n            userId={todo.userId}\n          />\n        ))\n      }\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App: React.FC = () => {\n  const [titleInput, setTitleInput] = useState('');\n  const [userSelect, setUserSelect] = useState(0);\n  const [titleFull, setTitleFull] = useState(true);\n  const [userChosen, setUserChosen] = useState(true);\n  const [todoId, setTodoId] = useState(\n    Math.max(...todosFromServer.map(todo => todo.id)),\n  );\n\n  const toDosUser = todosFromServer.map((todo) => {\n    return {\n      ...todo,\n      user: usersFromServer\n        .find((userFromId): boolean => userFromId.id === todo.userId),\n    };\n  });\n\n  class AddedTodos {\n    completed = false;\n\n    id = todoId;\n\n    constructor(\n      public title: string,\n      public userId: number,\n    ) {}\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          setTitleFull(!!titleInput);\n          setUserChosen(!!userSelect);\n\n          if (titleInput && userSelect) {\n            setTodoId(todoId + 1);\n\n            todosFromServer.push(new AddedTodos(\n              titleInput,\n              Number(userSelect),\n            ));\n\n            setTitleInput('');\n            setUserSelect(0);\n          }\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            name=\"title\"\n            value={titleInput}\n            onChange={(event => setTitleInput(\n              event.target.value\n                .replace(/[^a-z\\s\\d]/gi, ''),\n            ))}\n          />\n\n          {titleFull || (\n            <span className=\"error\">Please enter a title</span>\n          )}\n\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userSelect}\n            onChange={(event => setUserSelect(\n              Number(event.target.value),\n            ))}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {userChosen || (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={toDosUser}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}